{"version":3,"sources":["context/weather/weatherContext.js","Search.js","LocationAndDate.js","Temperature.js","Conditions.js","Favorite.js","Menu.js","DayForecast.js","Weather.js","context/weather/weatherReducer.js","context/types.js","context/weather/WeatherState.js","App.js","index.js","images/asoggetti-LFjxCbhs0QM-unsplash.jpg"],"names":["weatherContext","createContext","Search","props","useContext","WeatherContext","getWeather","getTodaysForecast","className","type","placeholder","onChange","e","setLocation","target","value","onKeyDown","key","location","onFocus","onClick","viewBox","d","LocationAndDate","currentWeather","observations","timezone","observation","city","state","offset","Date","utc","getTime","getTimezoneOffset","toLocaleString","weekday","year","month","day","hour","minute","calcTime","Temperature","temperature","isMetric","Conditions","description","iconLink","src","process","alt","Favorite","selected","index","favorite","select","Menu","useState","isOpen","setIsOpen","setSelected","favorites","clicked","newFavorites","splice","setFavorites","buttons","map","fetchWeather","document","addEventListener","setIsMetric","country","removeFavorite","tabIndex","DayForecast","defaults","global","animation","forecast","todaysForecast","hourlyForecasts","forecastLocation","style","width","ref","reference","redraw","data","canvas","obj","labelArr","forEach","cast","push","time","utcTime","ls","formatTime","labels","datasets","borderColor","fill","tempArr","options","responsive","aspectRatio","maintainAspectRatio","legend","display","scales","xAxes","ticks","fontColor","gridLines","zeroLineColor","yAxes","Container","styled","div","window","innerWidth","Math","max","documentElement","clientHeight","innerHeight","Bg","Weather","useEffect","loadedFavorites","JSON","parse","localStorage","getItem","loadedIsMetric","setItem","stringify","length","action","payload","loading","WeatherState","useReducer","weatherReducer","iconName","localTime","weeklyForecast","error","dispatch","a","metric","fetch","method","res","json","console","log","now","toISOString","split","getWeeksForecast","Provider","children","App","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.af98dc01.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst weatherContext = createContext();\r\n\r\nexport default weatherContext;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Search = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { getWeather, getTodaysForecast } = weatherContext;\r\n\r\n  const submitLocation = e => {\r\n    if (e.key === \"Enter\") {\r\n      getWeather(props.location);\r\n      getTodaysForecast(props.location);\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-blue-gray-900-alpha-70 pt-4 pb-2 rounded-b-md flex w-4/5 xl:w-1/2\">\r\n      <div className=\"w-1/6\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"location\"\r\n        className=\"bg-transparent outline-none text-center text-white text-2xl h-8 w-4/6\"\r\n        onChange={e => props.setLocation(e.target.value)}\r\n        onKeyDown={submitLocation}\r\n        onFocus={e => (e.target.value = \"\")}\r\n      />\r\n      <div className=\"w-1/6 flex flex-row justify-center\">\r\n        <button\r\n          className=\"inline-block text-white focus:outline-none\"\r\n          onClick={() =>\r\n            props.location !== \"\"\r\n              ? (getWeather(props.location), getTodaysForecast(props.location))\r\n              : null\r\n          }\r\n        >\r\n          <svg\r\n            className=\"w-8 h-8 inline-block fill-current\"\r\n            viewBox=\"0 0 20 20\"\r\n          >\r\n            <path\r\n              d=\"M19.129,18.164l-4.518-4.52c1.152-1.373,1.852-3.143,1.852-5.077c0-4.361-3.535-7.896-7.896-7.896\r\n\t\t\t\t\t\t\t\tc-4.361,0-7.896,3.535-7.896,7.896s3.535,7.896,7.896,7.896c1.934,0,3.705-0.698,5.078-1.853l4.52,4.519\r\n\t\t\t\t\t\t\t\tc0.266,0.268,0.699,0.268,0.965,0C19.396,18.863,19.396,18.431,19.129,18.164z M8.567,15.028c-3.568,0-6.461-2.893-6.461-6.461\r\n\t\t\t\t\t\t\t\ts2.893-6.461,6.461-6.461c3.568,0,6.46,2.893,6.46,6.461S12.135,15.028,8.567,15.028z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst LocationAndDate = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            timezone,\r\n            observation: [{ city, state }]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  const calcTime = offset => {\r\n    const d = new Date();\r\n    const utc = d.getTime() + d.getTimezoneOffset() * 60000;\r\n    const nd = new Date(utc + 3600000 * offset);\r\n    return nd.toLocaleString(\"en-US\", {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\"\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col items-center text-black mt-8 mb-4\">\r\n      <div className=\"text-2xl\">{city + \" ,\" + state}</div>\r\n      <div>{calcTime(timezone)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationAndDate;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Temperature = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            observation: [{ temperature }]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  return (\r\n    <div className=\"bg-blue-gray-900-alpha-70 p-8 rounded-md\">\r\n      <p className=\"text-6xl text-white font-hairline\">\r\n        {temperature}\r\n        {props.isMetric ? \"°C\" : \"°F\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Conditions = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            observation: [{ description, iconLink }]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  return (\r\n    <div className=\"text-black mt-2 text-2xl\">\r\n      <div>\r\n        {description}\r\n        <img\r\n          className=\"bg-blue-gray-900-alpha-70 rounded-md inline ml-2 p-2\"\r\n          src={`${iconLink}?apiKey=${process.env.REACT_APP_API_KEY}`}\r\n          alt=\":(\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conditions;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Favorite = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { getWeather, getTodaysForecast } = weatherContext;\r\n\r\n  return (\r\n    <button\r\n      className={`w-full text-white font-hairline text-2xl py-4 px-2 focus:outline-none border-b hover:bg-blue-gray-700 transition duration-500  ease-in-out ${\r\n        props.selected === props.index ? \"bg-blue-gray-700\" : \"\"\r\n      }`}\r\n      onClick={() => {\r\n        getWeather(props.favorite);\r\n        getTodaysForecast(props.favorite);\r\n        props.select(props.index);\r\n      }}\r\n    >\r\n      {props.favorite}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n","import React, { useState, Fragment, useContext } from \"react\";\r\nimport Favorite from \"./Favorite.js\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Menu = props => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selected, setSelected] = useState(0);\r\n\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            observation: [{ city, state }]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  let favorites = props.favorites;\r\n\r\n  const handleEscape = e => {\r\n    if (e.key === \"Esc\" || e.key === \"Escape\") {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const addFavorite = e => {\r\n    favorites = [...favorites, city + \", \" + state];\r\n    props.setFavorites(favorites);\r\n  };\r\n\r\n  const removeFavorite = index => {\r\n    let newFavorites = [...favorites];\r\n    newFavorites.splice(index, 1);\r\n    setSelected(null);\r\n    props.setFavorites(newFavorites);\r\n  };\r\n\r\n  const select = index => {\r\n    setSelected(0);\r\n    const clicked = favorites[index];\r\n    let newFavorites = [...favorites];\r\n    newFavorites.splice(index, 1);\r\n    newFavorites = [clicked, ...newFavorites];\r\n    props.setFavorites(newFavorites);\r\n  };\r\n\r\n  const buttons = favorites.map((favorite, index) => (\r\n    <Favorite\r\n      key={index}\r\n      favorite={favorite}\r\n      index={index}\r\n      fetchWeather={props.fetchWeather}\r\n      selected={selected}\r\n      select={select}\r\n    />\r\n  ));\r\n\r\n  document.addEventListener(\"keydown\", handleEscape);\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`fixed h-screen flex items-center z-10 transition duration-500 ease-in-out transform${\r\n          isOpen ? \"\" : \" -translate-x-56\"\r\n        }`}\r\n      >\r\n        <div\r\n          className={`h-full w-56 left-0 bg-blue-gray-900 border-r-2 border-gray-500 rounded-r-md overflow-y-auto`}\r\n        >\r\n          <button\r\n            className=\"text-white font-hairline text-2xl w-full py-4 px-2 focus:outline-none over hover:bg-blue-gray-700 transition duration-500  ease-in-out\"\r\n            onClick={() => {\r\n              props.setIsMetric(!props.isMetric);\r\n              props.fetchWeather(\r\n                props.city + \" \" + props.state + \" \" + props.country,\r\n                !props.isMetric\r\n              );\r\n            }}\r\n          >\r\n            {props.isMetric ? \"Farenheit\" : \"Celcius\"}\r\n          </button>\r\n          <div className=\"text-center bg-blue-gray-800 text-white font-hairline text-2xl w-full py-4 px-2 border-b-2\">\r\n            Favorites\r\n          </div>\r\n          {buttons}\r\n          <hr />\r\n          <button\r\n            className=\"text-white font-hairline text-2xl w-full py-4 px-2 focus:outline-none hover:bg-blue-gray-700 transition duration-500  ease-in-out\"\r\n            onClick={() => {\r\n              addFavorite();\r\n            }}\r\n          >\r\n            Add Current +\r\n          </button>\r\n          <button\r\n            className=\"text-white font-hairline text-2xl w-full py-4 px-2 focus:outline-none hover:bg-blue-gray-700 transition duration-500  ease-in-out\"\r\n            onClick={() => {\r\n              removeFavorite(selected);\r\n            }}\r\n          >\r\n            Remove Selected -\r\n          </button>\r\n        </div>\r\n        <button\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          className={`inline-block focus:outline-none text-white ${\r\n            isOpen ? \"h-full\" : \"\"\r\n          }`}\r\n        >\r\n          <div className=\"bg-blue-gray-900-alpha-70 rounded-r-md p-2\">\r\n            <svg className=\"h-10 w-10 fill-current\" viewBox=\"0 0 20 20\">\r\n              {isOpen ? (\r\n                <path d=\"M8.388,10.049l4.76-4.873c0.303-0.31,0.297-0.804-0.012-1.105c-0.309-0.304-0.803-0.293-1.105,0.012L6.726,9.516c-0.303,0.31-0.296,0.805,0.012,1.105l5.433,5.307c0.152,0.148,0.35,0.223,0.547,0.223c0.203,0,0.406-0.08,0.559-0.236c0.303-0.309,0.295-0.803-0.012-1.104L8.388,10.049z\"></path>\r\n              ) : (\r\n                <path d=\"M11.611,10.049l-4.76-4.873c-0.303-0.31-0.297-0.804,0.012-1.105c0.309-0.304,0.803-0.293,1.105,0.012l5.306,5.433c0.304,0.31,0.296,0.805-0.012,1.105L7.83,15.928c-0.152,0.148-0.35,0.223-0.547,0.223c-0.203,0-0.406-0.08-0.559-0.236c-0.303-0.309-0.295-0.803,0.012-1.104L11.611,10.049z\" />\r\n              )}\r\n            </svg>\r\n          </div>\r\n        </button>\r\n      </div>\r\n      {isOpen && (\r\n        <button\r\n          tabIndex=\"-1\"\r\n          className=\"absolute top-0 bottom-0 right-0 left-0 h-full w-full bg-transparent cursor-default focus:outline-none\"\r\n          onClick={() => setIsOpen(false)}\r\n        ></button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Line, defaults } from \"react-chartjs-2\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst DayForecast = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  let chartReference = {};\r\n\r\n  defaults.global.animation = false;\r\n\r\n  const {\r\n    todaysForecast: {\r\n      hourlyForecasts: {\r\n        forecastLocation: { forecast }\r\n      }\r\n    },\r\n    todaysForecast: {\r\n      hourlyForecasts: {\r\n        forecastLocation: { timezone }\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  const formatTime = (data, offset) => {\r\n    const time = new Date(data.utcTime);\r\n    const utc = time.getTime() + time.getTimezoneOffset() * 60000;\r\n    const nd = new Date(utc + 3600000 * offset);\r\n    const ls = nd.toLocaleString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\"\r\n    });\r\n    if (ls === \"Invalid Date\") return \"\";\r\n    return ls;\r\n  };\r\n\r\n  const data = canvas => {\r\n    const obj = {};\r\n\r\n    let labelArr = [];\r\n    forecast.forEach(cast => {\r\n      labelArr.push(formatTime(cast, timezone));\r\n    });\r\n    obj.labels = labelArr;\r\n\r\n    obj.datasets = [];\r\n    obj.datasets[0] = {\r\n      borderColor: \"white\",\r\n      fill: false\r\n    };\r\n\r\n    let tempArr = [];\r\n    forecast.forEach(cast => {\r\n      tempArr.push(cast.temperature);\r\n    });\r\n    obj.datasets[0].data = tempArr;\r\n\r\n    return obj;\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   chartReference.chartInstance.update();\r\n  // }, [forecast]);\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-blue-gray-900-alpha-70 mt-2 p-4 rounded max-w-2xl\"\r\n      style={{ width: \"calc(100% - 4rem)\" }}\r\n    >\r\n      <div className=\"text-white text-center text-2xl font-hairline\">\r\n        Temperature Forecast\r\n      </div>\r\n      <Line\r\n        ref={reference => (chartReference = reference)}\r\n        redraw={true}\r\n        data={data}\r\n        options={{\r\n          responsive: true,\r\n          aspectRatio: 2,\r\n          maintainAspectRatio: true,\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                ticks: {\r\n                  fontColor: \"white\"\r\n                },\r\n                gridLines: {\r\n                  zeroLineColor: \"black\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  fontColor: \"white\"\r\n                },\r\n                gridLines: {\r\n                  zeroLineColor: \"black\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayForecast;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Bg from \"./images/asoggetti-LFjxCbhs0QM-unsplash.jpg\";\r\nimport Search from \"./Search.js\";\r\nimport LocationAndDate from \"./LocationAndDate.js\";\r\nimport Temperature from \"./Temperature.js\";\r\nimport Conditions from \"./Conditions.js\";\r\nimport Menu from \"./Menu.js\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\nimport DayForecast from \"./DayForecast.js\";\r\n\r\n//prettier-ignore\r\nconst Container = styled.div`\r\nheight: 100vh;\r\n  min-height: ${window.innerWidth <= 640\r\n      ? Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\r\n      : 100}${window.innerWidth <= 640 ? \"px\" : \"vh\"};\r\n  background: url(${Bg}) center center/cover no-repeat;\r\n`;\r\n\r\nconst Weather = () => {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [isMetric, setIsMetric] = useState(false);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { getWeather, getTodaysForecast } = weatherContext;\r\n\r\n  useEffect(() => {\r\n    const loadedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    const loadedIsMetric = JSON.parse(localStorage.getItem(\"isMetric\"));\r\n    if (!localStorage.isMetric) {\r\n      localStorage.setItem(\"isMetric\", JSON.stringify(false));\r\n    } else {\r\n      setIsMetric(loadedIsMetric);\r\n    }\r\n\r\n    if (!localStorage.favorites) {\r\n      localStorage.setItem(\"favorites\", JSON.stringify([]));\r\n      getWeather(\"scotts valley\", false);\r\n    } else if (loadedFavorites.length > 0) {\r\n      setFavorites(loadedFavorites);\r\n      getWeather(loadedFavorites[0], false);\r\n      getTodaysForecast(loadedFavorites[0], false);\r\n    } else {\r\n      getWeather(\"scotts valley\", false);\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"isMetric\", JSON.stringify(isMetric));\r\n  }, [isMetric]);\r\n  return (\r\n    <Container className=\"w-screen overflow-x-hidden\">\r\n      <Menu\r\n        favorites={favorites}\r\n        setFavorites={setFavorites}\r\n        isMetric={isMetric}\r\n        setIsMetric={setIsMetric}\r\n      />\r\n      <div className=\"flex flex-col items-center\">\r\n        <Search setLocation={setLocation} location={location} />\r\n        <LocationAndDate />\r\n        <Temperature isMetric={isMetric} />\r\n        <Conditions />\r\n        <DayForecast />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { GET_WEATHER, GET_TODAY_FORECAST, GET_WEEK_FORECAST } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_WEATHER:\r\n      return {\r\n        ...state,\r\n        currentWeather: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_TODAY_FORECAST:\r\n      return {\r\n        ...state,\r\n        todaysForecast: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_WEATHER = \"GET_WEATHER\";\r\nexport const GET_WEEK_FORECAST = \"GET_WEEK_FORECAST\";\r\nexport const GET_TODAY_FORECAST = \"GET_TODAY_FORECAST\";\r\nexport const WEATHER_ERROR = \"WEATHER_ERROR\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import React, { useReducer } from \"react\";\r\nimport weatherReducer from \"./weatherReducer\";\r\nimport WeatherContext from \"./weatherContext\";\r\nimport {\r\n  GET_WEATHER,\r\n  GET_TODAY_FORECAST,\r\n  GET_WEEK_FORECAST,\r\n  WEATHER_ERROR,\r\n  CLEAR_ERRORS\r\n} from \"../types\";\r\n\r\nconst WeatherState = props => {\r\n  const initialState = {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            timezone: 0,\r\n            observation: [\r\n              {\r\n                description: \"\",\r\n                temperature: \"\",\r\n                iconName: \"\",\r\n                iconLink: \"\",\r\n                country: \"\",\r\n                state: \"\",\r\n                city: \"\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    todaysForecast: {\r\n      hourlyForecasts: {\r\n        forecastLocation: {\r\n          forecast: [\r\n            {\r\n              localTime: \"\",\r\n              temperature: \"\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    weeklyForecast: {},\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(weatherReducer, initialState);\r\n\r\n  const getWeather = async (location, metric = false) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=${process.env.REACT_APP_API_KEY}&product=observation&name=${location}&oneobservation=true&metric=${metric}`,\r\n        {\r\n          method: \"GET\"\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      dispatch({ type: GET_WEATHER, payload: data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getTodaysForecast = async (location, metric = false) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=${\r\n          process.env.REACT_APP_API_KEY\r\n        }&product=forecast_hourly&hourlydate=${\r\n          new Date(Date.now()).toISOString().split(\"T\")[0]\r\n        }&name=${location}&metric=${metric}`,\r\n        {\r\n          method: \"GET\"\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      console.log(data);\r\n\r\n      dispatch({ type: GET_TODAY_FORECAST, payload: data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getWeeksForecast = async (location, metric = false) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=${process.env.REACT_APP_API_KEY}&product=forecast_7days_simple&name=${location}&metric=${metric}`,\r\n        {\r\n          method: \"GET\"\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      dispatch({ type: GET_WEEK_FORECAST, payload: data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        currentWeather: state.currentWeather,\r\n        todaysForecast: state.todaysForecast,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        getWeather,\r\n        getTodaysForecast,\r\n        getWeeksForecast\r\n      }}\r\n    >\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherState;\r\n","import React, { useEffect } from \"react\";\nimport Weather from \"./Weather.js\";\n\nimport WeatherState from \"./context/weather/WeatherState.js\";\n\nconst App = () => {\n  useEffect(() => {\n    if (!localStorage.favorites) {\n      localStorage.setItem(\"favorites\", JSON.stringify([]));\n    }\n\n    if (!localStorage.isMetric) {\n      localStorage.setItem(\"isMetric\", JSON.stringify(false));\n    }\n  });\n  return (\n    <WeatherState>\n      <Weather />\n    </WeatherState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\"\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/asoggetti-LFjxCbhs0QM-unsplash.9a8fdc8e.jpg\";"],"sourceRoot":""}