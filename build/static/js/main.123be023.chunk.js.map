{"version":3,"sources":["images/cold2.jpg","Location.js","LocationAndDate.js","Temperature.js","Conditions.js","initialState.js","App.js","index.js"],"names":["module","exports","Input","styled","input","Location","props","useState","location","setLocation","type","placeholder","className","value","onChange","e","target","onKeyDown","key","fetchWeather","H3","h3","H5","h5","DIV","div","LocationAndDate","city","state","Date","toLocaleString","weekday","year","month","day","hour","minute","Temp","Temperature","temperature","H4","h4","Conditions","conditions","initialState","observations","observation","daylight","description","skyInfo","skyDescription","temperatureDesc","comfort","highTemperature","lowTemperature","humidity","dewPoint","precipitation1H","precipitation3H","precipitation6H","precipitation12H","precipitation24H","precipitationDesc","airInfo","airDescription","windSpeed","windDirection","windDesc","windDescShort","barometerPressure","barometerTrend","visibility","snowCover","icon","iconName","iconLink","ageMinutes","activeAlerts","country","latitude","longitude","distance","elevation","utcTime","timezone","Container","Math","max","document","documentElement","clientHeight","window","innerHeight","Cold","App","weatherData","setWeatherData","a","fetch","method","req","json","res","console","log","useEffect","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.123be023.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cold2.b3b3ccf8.jpg\";","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  &:focus {\r\n    border-bottom: none !important;\r\n    box-shadow: none !important;\r\n    background: rgba(256, 256, 256, 1) !important;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: grey;\r\n  }\r\n\r\n  border-bottom: none !important;\r\n  border-radius: 0 0 20px 20px !important;\r\n  text-align: center;\r\n  background: rgba(256, 256, 256, 0.5) !important;\r\n  transition: background 300ms ease-in-out !important;\r\n  padding-top: 1rem !important;\r\n`;\r\n\r\nconst Location = props => {\r\n  const [location, setLocation] = useState(\"\");\r\n\r\n  const submitLocation = e => {\r\n    if (e.key === \"Enter\") {\r\n      props.fetchWeather(location);\r\n    }\r\n  };\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      placeholder=\"location\"\r\n      className=\"col s10 offset-s1\"\r\n      value={location}\r\n      onChange={e => setLocation(e.target.value)}\r\n      onKeyDown={submitLocation}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst H3 = styled.h3`\r\n  margin-top: 0;\r\n  text-shadow: 2px 2px 0px rgb(75, 75, 75);\r\n  font-weight: 300;\r\n`;\r\n\r\nconst H5 = styled.h5`\r\n  text-shadow: 4px 2px 3px #727272;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst DIV = styled.div`\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst LocationAndDate = props => {\r\n  return (\r\n    <DIV className=\"col s10 offset-s1 center white-text\">\r\n      <H3>\r\n        {props.city}, {props.state}\r\n      </H3>\r\n      <H5>\r\n        {new Date().toLocaleString(\"en-US\", {\r\n          weekday: \"long\",\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\"\r\n        })}\r\n      </H5>\r\n    </DIV>\r\n  );\r\n};\r\n\r\nexport default LocationAndDate;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DIV = styled.div`\r\n  margin-top: 2rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Temp = styled.div`\r\n  font-size: 5rem;\r\n  color: white;\r\n  height: 200px;\r\n  width: 325px !important;\r\n  min-width: 325px !important;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(256, 256, 256, 0.5);\r\n  /* box-shadow: 2px 2px 0px rgb(75, 75, 75); */\r\n  text-shadow: 4px 2px 0px rgb(75, 75, 75);\r\n  border-radius: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Temperature = props => {\r\n  return (\r\n    <DIV className=\"col s4 offset-s4 valign-wrapper\">\r\n      <Temp>{props.temperature}Â°C</Temp>\r\n    </DIV>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DIV = styled.div``;\r\n\r\nconst H4 = styled.h4`\r\n  font-weight: 300;\r\n`;\r\n\r\nconst Conditions = props => {\r\n  return (\r\n    <DIV className=\"col s4 offset-s4 center white-text\">\r\n      <H4>{props.conditions}</H4>\r\n    </DIV>\r\n  );\r\n};\r\n\r\nexport default Conditions;\r\n","const initialState = {\r\n  observations: {\r\n    location: [\r\n      {\r\n        observation: [\r\n          {\r\n            daylight: \"D\",\r\n            description: \"\",\r\n            skyInfo: \"1\",\r\n            skyDescription: \"Sunny\",\r\n            temperature: \"\",\r\n            temperatureDesc: \"Cool\",\r\n            comfort: \"10.81\",\r\n            highTemperature: \"13.50\",\r\n            lowTemperature: \"7.10\",\r\n            humidity: \"77\",\r\n            dewPoint: \"7.78\",\r\n            precipitation1H: \"*\",\r\n            precipitation3H: \"*\",\r\n            precipitation6H: \"*\",\r\n            precipitation12H: \"*\",\r\n            precipitation24H: \"*\",\r\n            precipitationDesc: \"\",\r\n            airInfo: \"*\",\r\n            airDescription: \"\",\r\n            windSpeed: \"9.27\",\r\n            windDirection: \"240\",\r\n            windDesc: \"Southwest\",\r\n            windDescShort: \"SW\",\r\n            barometerPressure: \"1017.80\",\r\n            barometerTrend: \"\",\r\n            visibility: \"16.09\",\r\n            snowCover: \"*\",\r\n            icon: \"1\",\r\n            iconName: \"sunny\",\r\n            iconLink:\r\n              \"https://weather.ls.hereapi.com/static/weather/icon/1.png\",\r\n            ageMinutes: \"20\",\r\n            activeAlerts: \"0\",\r\n            country: \"\",\r\n            state: \"\",\r\n            city: \"\",\r\n            latitude: 37.05,\r\n            longitude: -122.0,\r\n            distance: 22.62,\r\n            elevation: 199.0,\r\n            utcTime: \"2020-02-13T16:53:00.000-08:00\"\r\n          }\r\n        ],\r\n        country: \"United States\",\r\n        state: \"California\",\r\n        city: \"Scotts Valley\",\r\n        latitude: 37.05,\r\n        longitude: -122.0,\r\n        distance: 0.0,\r\n        timezone: -8\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport default initialState;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Location from \"./Location.js\";\nimport LocationAndDate from \"./LocationAndDate.js\";\nimport Temperature from \"./Temperature.js\";\nimport Conditions from \"./Conditions.js\";\nimport initialState from \"./initialState.js\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport Cold from \"./images/cold2.jpg\";\nimport \"./App.css\";\n\nconst Container = styled.div`\n  height: ${Math.max(\n    document.documentElement.clientHeight,\n    window.innerHeight || 0\n  )}px;\n  background: url(${Cold}) center center/cover no-repeat;\n  margin-bottom: 0;\n  margin: 0 auto;\n`;\n\nconst App = () => {\n  const [weatherData, setWeatherData] = useState(initialState);\n\n  const fetchWeather = async location => {\n    const req = await fetch(\n      `https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=FbkF7HBS4x03_o9G-VTicFHdCF1UrskFVGRd_OwZOmw&product=observation&name=${location}&oneobservation=true`,\n      {\n        method: \"GET\"\n      }\n    );\n\n    const res = await req.json();\n\n    console.log(res);\n\n    setWeatherData(res);\n  };\n\n  useEffect(() => {\n    // fetchWeather(\"boulder\");\n  }, []);\n\n  return (\n    <Container>\n      <div className=\"row\">\n        <Location fetchWeather={fetchWeather} />\n        <LocationAndDate\n          city={weatherData.observations.location[0].observation[0].city}\n          state={weatherData.observations.location[0].observation[0].state}\n        />\n        <Temperature\n          temperature={\n            weatherData.observations.location[0].observation[0].temperature\n          }\n        />\n        <Conditions\n          conditions={\n            weatherData.observations.location[0].observation[0].description\n          }\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}