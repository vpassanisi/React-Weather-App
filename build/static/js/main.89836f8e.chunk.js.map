{"version":3,"sources":["context/weather/weatherContext.js","Search.js","LocationAndDate.js","Temperature.js","Conditions.js","Favorite.js","Menu.js","DayForecast.js","Day.js","WeeklyForecast.js","Weather.js","context/weather/weatherReducer.js","context/types.js","context/weather/WeatherState.js","App.js","index.js","images/asoggetti-LFjxCbhs0QM-unsplash.jpg"],"names":["weatherContext","createContext","Search","props","useContext","WeatherContext","getWeather","getTodaysForecast","className","type","placeholder","onChange","e","setLocation","target","value","onKeyDown","key","location","onFocus","onClick","viewBox","d","LocationAndDate","currentWeather","observations","timezone","observation","city","state","offset","Date","utc","getTime","getTimezoneOffset","toLocaleString","weekday","year","month","day","hour","minute","calcTime","Temperature","temperature","isMetric","Conditions","description","iconLink","style","width","src","process","alt","Favorite","getWeeksForecast","selected","index","favorite","select","Menu","useState","isOpen","setIsOpen","setSelected","country","favorites","clicked","newFavorites","splice","setFavorites","buttons","map","document","addEventListener","setIsMetric","removeFavorite","tabIndex","DayForecast","defaults","global","animation","forecast","todaysForecast","hourlyForecasts","forecastLocation","ref","reference","redraw","data","canvas","obj","labelArr","forEach","cast","push","time","utcTime","ls","formatTime","labels","datasets","borderColor","fill","tempArr","options","responsive","aspectRatio","maintainAspectRatio","legend","display","scales","xAxes","ticks","fontColor","gridLines","zeroLineColor","yAxes","Day","minWidth","highTemperature","height","WeeklyForecast","Days","weeklyForecast","dailyForecasts","Container","styled","div","window","innerWidth","Math","max","documentElement","clientHeight","innerHeight","Bg","Weather","useEffect","loadedFavorites","JSON","parse","localStorage","getItem","loadedIsMetric","setItem","stringify","length","action","payload","loading","WeatherState","useReducer","weatherReducer","iconName","localTime","error","dispatch","a","metric","fetch","method","res","json","console","log","now","toISOString","split","Provider","children","App","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.89836f8e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst weatherContext = createContext();\r\n\r\nexport default weatherContext;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Search = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { getWeather, getTodaysForecast } = weatherContext;\r\n\r\n  const submitLocation = e => {\r\n    if (e.key === \"Enter\") {\r\n      getWeather(props.location);\r\n      getTodaysForecast(props.location);\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-blue-gray-900-alpha-70 pt-4 pb-2 rounded-b-md flex w-4/5 xl:w-1/2\">\r\n      <div className=\"w-1/6\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"location\"\r\n        className=\"bg-transparent outline-none text-center text-white text-2xl h-8 w-4/6\"\r\n        onChange={e => props.setLocation(e.target.value)}\r\n        onKeyDown={submitLocation}\r\n        onFocus={e => (e.target.value = \"\")}\r\n      />\r\n      <div className=\"w-1/6 flex flex-row justify-center\">\r\n        <button\r\n          className=\"inline-block text-white focus:outline-none\"\r\n          onClick={() =>\r\n            props.location !== \"\"\r\n              ? (getWeather(props.location), getTodaysForecast(props.location))\r\n              : null\r\n          }\r\n        >\r\n          <svg\r\n            className=\"w-8 h-8 inline-block fill-current\"\r\n            viewBox=\"0 0 20 20\"\r\n          >\r\n            <path\r\n              d=\"M19.129,18.164l-4.518-4.52c1.152-1.373,1.852-3.143,1.852-5.077c0-4.361-3.535-7.896-7.896-7.896\r\n\t\t\t\t\t\t\t\tc-4.361,0-7.896,3.535-7.896,7.896s3.535,7.896,7.896,7.896c1.934,0,3.705-0.698,5.078-1.853l4.52,4.519\r\n\t\t\t\t\t\t\t\tc0.266,0.268,0.699,0.268,0.965,0C19.396,18.863,19.396,18.431,19.129,18.164z M8.567,15.028c-3.568,0-6.461-2.893-6.461-6.461\r\n\t\t\t\t\t\t\t\ts2.893-6.461,6.461-6.461c3.568,0,6.46,2.893,6.46,6.461S12.135,15.028,8.567,15.028z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst LocationAndDate = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            timezone,\r\n            observation: [{ city, state }]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  const calcTime = offset => {\r\n    const d = new Date();\r\n    const utc = d.getTime() + d.getTimezoneOffset() * 60000;\r\n    const nd = new Date(utc + 3600000 * offset);\r\n    return nd.toLocaleString(\"en-US\", {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\"\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col items-center text-black mt-8 mb-4\">\r\n      <div className=\"text-2xl\">{city + \" ,\" + state}</div>\r\n      <div>{calcTime(timezone)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationAndDate;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Temperature = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            observation: [{ temperature }]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  return (\r\n    <div className=\"bg-blue-gray-900-alpha-70 p-8 rounded-md\">\r\n      <p className=\"text-6xl text-white font-hairline\">\r\n        {temperature}\r\n        {props.isMetric ? \"°C\" : \"°F\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Temperature;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Conditions = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            observation: [{ description, iconLink }]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  return (\r\n    <div\r\n      className=\"flex flex-row items-center justify-center text-black mt-2 text-2xl\"\r\n      style={{ width: \"calc(100% - 4rem)\" }}\r\n    >\r\n      {description}\r\n      <img\r\n        className=\"bg-blue-gray-900-alpha-70 rounded-md inline ml-2 p-2\"\r\n        src={`${iconLink}?apiKey=${process.env.REACT_APP_API_KEY}`}\r\n        alt=\":(\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conditions;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Favorite = props => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { getWeather, getTodaysForecast, getWeeksForecast } = weatherContext;\r\n\r\n  return (\r\n    <button\r\n      className={`w-full text-white font-hairline text-2xl py-4 px-2 focus:outline-none border-b hover:bg-blue-gray-700 transition duration-500  ease-in-out ${\r\n        props.selected === props.index ? \"bg-blue-gray-700\" : \"\"\r\n      }`}\r\n      onClick={() => {\r\n        getWeather(props.favorite, props.isMetric);\r\n        getTodaysForecast(props.favorite, props.isMetric);\r\n        getWeeksForecast(props.favorite, props.isMetric);\r\n        props.select(props.index);\r\n      }}\r\n    >\r\n      {props.favorite}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n","import React, { useState, Fragment, useContext } from \"react\";\r\nimport Favorite from \"./Favorite.js\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst Menu = props => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selected, setSelected] = useState(0);\r\n\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    getWeather,\r\n    getTodaysForecast,\r\n    getWeeksForecast,\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            observation: [{ city, state, country }]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  let favorites = props.favorites;\r\n\r\n  const handleEscape = e => {\r\n    if (e.key === \"Esc\" || e.key === \"Escape\") {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const addFavorite = e => {\r\n    favorites = [...favorites, city + \", \" + state];\r\n    props.setFavorites(favorites);\r\n  };\r\n\r\n  const removeFavorite = index => {\r\n    let newFavorites = [...favorites];\r\n    newFavorites.splice(index, 1);\r\n    setSelected(null);\r\n    props.setFavorites(newFavorites);\r\n  };\r\n\r\n  const select = index => {\r\n    setSelected(0);\r\n    const clicked = favorites[index];\r\n    let newFavorites = [...favorites];\r\n    newFavorites.splice(index, 1);\r\n    newFavorites = [clicked, ...newFavorites];\r\n    props.setFavorites(newFavorites);\r\n  };\r\n\r\n  const buttons = favorites.map((favorite, index) => (\r\n    <Favorite\r\n      key={index}\r\n      favorite={favorite}\r\n      index={index}\r\n      selected={selected}\r\n      select={select}\r\n      isMetric={props.isMetric}\r\n    />\r\n  ));\r\n\r\n  document.addEventListener(\"keydown\", handleEscape);\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`fixed h-screen flex items-center z-10 transition duration-500 ease-in-out transform${\r\n          isOpen ? \"\" : \" -translate-x-56\"\r\n        }`}\r\n      >\r\n        <div\r\n          className={`h-full w-56 left-0 bg-blue-gray-900 border-r-2 border-gray-500 rounded-r-md overflow-y-auto`}\r\n        >\r\n          <button\r\n            className=\"text-white font-hairline text-2xl w-full py-4 px-2 focus:outline-none over hover:bg-blue-gray-700 transition duration-500  ease-in-out\"\r\n            onClick={() => {\r\n              props.setIsMetric(!props.isMetric);\r\n              getWeather(city + \" \" + state + \" \" + country, !props.isMetric);\r\n              getTodaysForecast(\r\n                city + \" \" + state + \" \" + country,\r\n                !props.isMetric\r\n              );\r\n              getWeeksForecast(\r\n                city + \" \" + state + \" \" + country,\r\n                !props.isMetric\r\n              );\r\n            }}\r\n          >\r\n            {props.isMetric ? \"Farenheit\" : \"Celcius\"}\r\n          </button>\r\n          <div className=\"text-center bg-blue-gray-800 text-white font-hairline text-2xl w-full py-4 px-2 border-b-2\">\r\n            Favorites\r\n          </div>\r\n          {buttons}\r\n          <hr />\r\n          <button\r\n            className=\"text-white font-hairline text-2xl w-full py-4 px-2 focus:outline-none hover:bg-blue-gray-700 transition duration-500  ease-in-out\"\r\n            onClick={() => {\r\n              addFavorite();\r\n            }}\r\n          >\r\n            Add Current +\r\n          </button>\r\n          <button\r\n            className=\"text-white font-hairline text-2xl w-full py-4 px-2 focus:outline-none hover:bg-blue-gray-700 transition duration-500  ease-in-out\"\r\n            onClick={() => {\r\n              removeFavorite(selected);\r\n            }}\r\n          >\r\n            Remove Selected -\r\n          </button>\r\n        </div>\r\n        <button\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          className={`inline-block focus:outline-none text-white ${\r\n            isOpen ? \"h-full\" : \"\"\r\n          }`}\r\n        >\r\n          <div className=\"bg-blue-gray-900-alpha-70 rounded-r-md p-2\">\r\n            <svg className=\"h-10 w-10 fill-current\" viewBox=\"0 0 20 20\">\r\n              {isOpen ? (\r\n                <path d=\"M8.388,10.049l4.76-4.873c0.303-0.31,0.297-0.804-0.012-1.105c-0.309-0.304-0.803-0.293-1.105,0.012L6.726,9.516c-0.303,0.31-0.296,0.805,0.012,1.105l5.433,5.307c0.152,0.148,0.35,0.223,0.547,0.223c0.203,0,0.406-0.08,0.559-0.236c0.303-0.309,0.295-0.803-0.012-1.104L8.388,10.049z\"></path>\r\n              ) : (\r\n                <path d=\"M11.611,10.049l-4.76-4.873c-0.303-0.31-0.297-0.804,0.012-1.105c0.309-0.304,0.803-0.293,1.105,0.012l5.306,5.433c0.304,0.31,0.296,0.805-0.012,1.105L7.83,15.928c-0.152,0.148-0.35,0.223-0.547,0.223c-0.203,0-0.406-0.08-0.559-0.236c-0.303-0.309-0.295-0.803,0.012-1.104L11.611,10.049z\" />\r\n              )}\r\n            </svg>\r\n          </div>\r\n        </button>\r\n      </div>\r\n      {isOpen && (\r\n        <button\r\n          tabIndex=\"-1\"\r\n          className=\"absolute top-0 bottom-0 right-0 left-0 h-full w-full bg-transparent cursor-default focus:outline-none\"\r\n          onClick={() => setIsOpen(false)}\r\n        ></button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Line, defaults } from \"react-chartjs-2\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\n\r\nconst DayForecast = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  let chartReference = {};\r\n\r\n  defaults.global.animation = false;\r\n\r\n  const {\r\n    todaysForecast: {\r\n      hourlyForecasts: {\r\n        forecastLocation: { forecast }\r\n      }\r\n    },\r\n    todaysForecast: {\r\n      hourlyForecasts: {\r\n        forecastLocation: { timezone }\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  const formatTime = (data, offset) => {\r\n    const time = new Date(data.utcTime);\r\n    const utc = time.getTime() + time.getTimezoneOffset() * 60000;\r\n    const nd = new Date(utc + 3600000 * offset);\r\n    const ls = nd.toLocaleString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\"\r\n    });\r\n    if (ls === \"Invalid Date\") return \"\";\r\n    return ls;\r\n  };\r\n\r\n  const data = canvas => {\r\n    const obj = {};\r\n\r\n    let labelArr = [];\r\n    forecast.forEach(cast => {\r\n      labelArr.push(formatTime(cast, timezone));\r\n    });\r\n    obj.labels = labelArr;\r\n\r\n    obj.datasets = [];\r\n    obj.datasets[0] = {\r\n      borderColor: \"white\",\r\n      fill: false\r\n    };\r\n\r\n    let tempArr = [];\r\n    forecast.forEach(cast => {\r\n      tempArr.push(cast.temperature);\r\n    });\r\n    obj.datasets[0].data = tempArr;\r\n\r\n    return obj;\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   chartReference.chartInstance.update();\r\n  // }, [forecast]);\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-blue-gray-900-alpha-70 my-2 p-4 rounded max-w-2xl\"\r\n      style={{ width: \"calc(100% - 4rem)\" }}\r\n    >\r\n      <div className=\"text-white text-center text-2xl font-hairline\">\r\n        Temperature Forecast\r\n      </div>\r\n      <Line\r\n        ref={reference => (chartReference = reference)}\r\n        redraw={true}\r\n        data={data}\r\n        options={{\r\n          responsive: true,\r\n          aspectRatio: 2,\r\n          maintainAspectRatio: true,\r\n          legend: {\r\n            display: false\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                ticks: {\r\n                  fontColor: \"white\"\r\n                },\r\n                gridLines: {\r\n                  zeroLineColor: \"black\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  fontColor: \"white\"\r\n                },\r\n                gridLines: {\r\n                  zeroLineColor: \"black\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayForecast;\r\n","import React from \"react\";\r\n\r\nconst Day = props => {\r\n  const data = props.cast;\r\n  return (\r\n    <div\r\n      className=\"bg-blue-gray-900-alpha-70 text-white font-hairline rounded p-2 mx-2 w-32 flex flex-col items-center\"\r\n      style={{ minWidth: \"8rem\" }}\r\n    >\r\n      <div className=\"text-center\">{data.weekday}</div>\r\n      <img\r\n        className=\"h-16 w-16\"\r\n        src={`${data.iconLink}?apiKey=${process.env.REACT_APP_API_KEY}`}\r\n        alt=\":(\"\r\n      />\r\n      <div>High: {data.highTemperature}</div>\r\n      <div className=\"w-full my-2 bg-white rounded\" style={{ height: \"2px\" }} />\r\n      <div className=\"\">{data.description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\nimport Day from \"./Day.js\";\r\n\r\nconst WeeklyForecast = () => {\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const {\r\n    weeklyForecast: {\r\n      dailyForecasts: {\r\n        forecastLocation: { forecast }\r\n      }\r\n    }\r\n  } = weatherContext;\r\n\r\n  const Days = forecast.map((cast, index) => <Day key={index} cast={cast} />);\r\n\r\n  return (\r\n    <div\r\n      className=\"flex flex-row overflow-x-auto mb-4\"\r\n      style={{ width: \"calc(100% - 4rem)\" }}\r\n    >\r\n      {Days}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyForecast;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Bg from \"./images/asoggetti-LFjxCbhs0QM-unsplash.jpg\";\r\nimport Search from \"./Search.js\";\r\nimport LocationAndDate from \"./LocationAndDate.js\";\r\nimport Temperature from \"./Temperature.js\";\r\nimport Conditions from \"./Conditions.js\";\r\nimport Menu from \"./Menu.js\";\r\nimport WeatherContext from \"./context/weather/weatherContext\";\r\nimport DayForecast from \"./DayForecast.js\";\r\nimport WeeklyForecast from \"./WeeklyForecast.js\";\r\n\r\n//prettier-ignore\r\nconst Container = styled.div`\r\nheight: 100vh;\r\n  min-height: ${window.innerWidth <= 640\r\n      ? Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\r\n      : 100}${window.innerWidth <= 640 ? \"px\" : \"vh\"};\r\n  background: url(${Bg}) center center/cover no-repeat;\r\n`;\r\n\r\nconst Weather = () => {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [isMetric, setIsMetric] = useState(false);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  const weatherContext = useContext(WeatherContext);\r\n\r\n  const { getWeather, getTodaysForecast, getWeeksForecast } = weatherContext;\r\n\r\n  useEffect(() => {\r\n    const loadedFavorites = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    const loadedIsMetric = JSON.parse(localStorage.getItem(\"isMetric\"));\r\n    if (!localStorage.isMetric) {\r\n      localStorage.setItem(\"isMetric\", JSON.stringify(false));\r\n    } else {\r\n      setIsMetric(loadedIsMetric);\r\n    }\r\n\r\n    if (!localStorage.favorites) {\r\n      localStorage.setItem(\"favorites\", JSON.stringify([]));\r\n      getWeather(\"scotts valley\", false);\r\n      getTodaysForecast(\"scotts valley\", false);\r\n      getWeeksForecast(\"scotts valley\", false);\r\n    } else if (loadedFavorites.length > 0) {\r\n      setFavorites(loadedFavorites);\r\n      getWeather(\r\n        loadedFavorites[0],\r\n        JSON.parse(localStorage.getItem(\"isMetric\"))\r\n      );\r\n      getTodaysForecast(\r\n        loadedFavorites[0],\r\n        JSON.parse(localStorage.getItem(\"isMetric\"))\r\n      );\r\n      getWeeksForecast(\r\n        loadedFavorites[0],\r\n        JSON.parse(localStorage.getItem(\"isMetric\"))\r\n      );\r\n    } else {\r\n      getWeather(\"scotts valley\", JSON.parse(localStorage.getItem(\"isMetric\")));\r\n      getTodaysForecast(\r\n        \"scotts valley\",\r\n        JSON.parse(localStorage.getItem(\"isMetric\"))\r\n      );\r\n      getWeeksForecast(\r\n        \"scotts valley\",\r\n        JSON.parse(localStorage.getItem(\"isMetric\"))\r\n      );\r\n    }\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"isMetric\", JSON.stringify(isMetric));\r\n  }, [isMetric]);\r\n  return (\r\n    <Container className=\"w-screen overflow-x-hidden\">\r\n      <Menu\r\n        favorites={favorites}\r\n        setFavorites={setFavorites}\r\n        isMetric={isMetric}\r\n        setIsMetric={setIsMetric}\r\n      />\r\n      <div className=\"flex flex-col items-center\">\r\n        <Search setLocation={setLocation} location={location} />\r\n        <LocationAndDate />\r\n        <Temperature isMetric={isMetric} />\r\n        <Conditions />\r\n        <DayForecast />\r\n        <div className=\"font-hairline text-4xl underline\">Weekly Forecast</div>\r\n        <WeeklyForecast />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { GET_WEATHER, GET_TODAY_FORECAST, GET_WEEKLY_FORECAST } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_WEATHER:\r\n      return {\r\n        ...state,\r\n        currentWeather: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_TODAY_FORECAST:\r\n      return {\r\n        ...state,\r\n        todaysForecast: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_WEEKLY_FORECAST:\r\n      return {\r\n        ...state,\r\n        weeklyForecast: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_WEATHER = \"GET_WEATHER\";\r\nexport const GET_WEEKLY_FORECAST = \"GET_WEEKLY_FORECAST\";\r\nexport const GET_TODAY_FORECAST = \"GET_TODAY_FORECAST\";\r\nexport const WEATHER_ERROR = \"WEATHER_ERROR\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import React, { useReducer } from \"react\";\r\nimport weatherReducer from \"./weatherReducer\";\r\nimport WeatherContext from \"./weatherContext\";\r\nimport {\r\n  GET_WEATHER,\r\n  GET_TODAY_FORECAST,\r\n  GET_WEEKLY_FORECAST,\r\n  WEATHER_ERROR,\r\n  CLEAR_ERRORS\r\n} from \"../types\";\r\n\r\nconst WeatherState = props => {\r\n  const initialState = {\r\n    currentWeather: {\r\n      observations: {\r\n        location: [\r\n          {\r\n            timezone: 0,\r\n            observation: [\r\n              {\r\n                description: \"\",\r\n                temperature: \"\",\r\n                iconName: \"\",\r\n                iconLink: \"\",\r\n                country: \"\",\r\n                state: \"\",\r\n                city: \"\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    todaysForecast: {\r\n      hourlyForecasts: {\r\n        forecastLocation: {\r\n          forecast: [\r\n            {\r\n              localTime: \"\",\r\n              temperature: \"\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    weeklyForecast: {\r\n      dailyForecasts: {\r\n        forecastLocation: { forecast: [] }\r\n      }\r\n    },\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(weatherReducer, initialState);\r\n\r\n  const getWeather = async (location, metric = false) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=${process.env.REACT_APP_API_KEY}&product=observation&name=${location}&oneobservation=true&metric=${metric}`,\r\n        {\r\n          method: \"GET\"\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      dispatch({ type: GET_WEATHER, payload: data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getTodaysForecast = async (location, metric = false) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=${\r\n          process.env.REACT_APP_API_KEY\r\n        }&product=forecast_hourly&hourlydate=${\r\n          new Date(Date.now()).toISOString().split(\"T\")[0]\r\n        }&name=${location}&metric=${metric}`,\r\n        {\r\n          method: \"GET\"\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      dispatch({ type: GET_TODAY_FORECAST, payload: data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getWeeksForecast = async (location, metric = false) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://weather.ls.hereapi.com/weather/1.0/report.json?apiKey=${process.env.REACT_APP_API_KEY}&product=forecast_7days_simple&name=${location}&metric=${metric}`,\r\n        {\r\n          method: \"GET\"\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      console.log(data);\r\n\r\n      dispatch({ type: GET_WEEKLY_FORECAST, payload: data });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        currentWeather: state.currentWeather,\r\n        todaysForecast: state.todaysForecast,\r\n        weeklyForecast: state.weeklyForecast,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        getWeather,\r\n        getTodaysForecast,\r\n        getWeeksForecast\r\n      }}\r\n    >\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WeatherState;\r\n","import React, { useEffect } from \"react\";\nimport Weather from \"./Weather.js\";\n\nimport WeatherState from \"./context/weather/WeatherState.js\";\n\nconst App = () => {\n  useEffect(() => {\n    if (!localStorage.favorites) {\n      localStorage.setItem(\"favorites\", JSON.stringify([]));\n    }\n\n    if (!localStorage.isMetric) {\n      localStorage.setItem(\"isMetric\", JSON.stringify(false));\n    }\n  });\n  return (\n    <WeatherState>\n      <Weather />\n    </WeatherState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\"\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/asoggetti-LFjxCbhs0QM-unsplash.9a8fdc8e.jpg\";"],"sourceRoot":""}